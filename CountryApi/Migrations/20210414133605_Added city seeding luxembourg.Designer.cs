// <auto-generated />
using System;
using CountryApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountryApi.Migrations
{
    [DbContext(typeof(VisitContext))]
    [Migration("20210414133605_Added city seeding luxembourg")]
    partial class Addedcityseedingluxembourg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CountryApi.Models.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryISOCode");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("6780f893-b060-4194-a8d7-36263bc3aff7"),
                            CountryISOCode = "LUX",
                            Name = "Luxembourg City",
                            Population = 114303
                        },
                        new
                        {
                            CityId = new Guid("f0f165dd-4c8e-4d93-83ff-19f4126edeb7"),
                            CountryISOCode = "LUX",
                            Name = "Echternach",
                            Population = 5614
                        },
                        new
                        {
                            CityId = new Guid("7febfeea-f047-46d7-9da3-8017316b93d3"),
                            CountryISOCode = "BE",
                            Name = "Bruges",
                            Population = 118656
                        },
                        new
                        {
                            CityId = new Guid("31917678-b45f-47a9-b1f5-f5c2c39f9c34"),
                            CountryISOCode = "BE",
                            Name = "Ghent",
                            Population = 466000
                        },
                        new
                        {
                            CityId = new Guid("fbb521fe-e8f1-4689-ade6-539a92b9d9e7"),
                            CountryISOCode = "BE",
                            Name = "Antwerp",
                            Population = 523248
                        },
                        new
                        {
                            CityId = new Guid("19fccb75-1992-42ae-8452-248d88912816"),
                            CountryISOCode = "BE",
                            Name = "Brussels",
                            Population = 2081000
                        },
                        new
                        {
                            CityId = new Guid("e51412e7-9320-4101-a178-aa37d6e730f4"),
                            CountryISOCode = "BE",
                            Name = "Liège",
                            Population = 195965
                        },
                        new
                        {
                            CityId = new Guid("79d8efe3-ee84-42d3-9e02-e0427af35067"),
                            CountryISOCode = "BE",
                            Name = "Tournai",
                            Population = 69083
                        },
                        new
                        {
                            CityId = new Guid("bded7796-091e-4e18-b158-c3e1abdbe500"),
                            CountryISOCode = "FR",
                            Name = "Paris",
                            Population = 11017000
                        },
                        new
                        {
                            CityId = new Guid("854dd92b-e201-4d1f-818e-ddaa1ace0156"),
                            CountryISOCode = "FR",
                            Name = "Calais",
                            Population = 72929
                        },
                        new
                        {
                            CityId = new Guid("59fe91ac-bbe3-40f9-a609-6207e2f1eda9"),
                            CountryISOCode = "FR",
                            Name = "Calais",
                            Population = 868277
                        },
                        new
                        {
                            CityId = new Guid("ab6428d8-9d4d-46fd-a7ad-774a5ef4c578"),
                            CountryISOCode = "FR",
                            Name = "Bordeaux",
                            Population = 257068
                        },
                        new
                        {
                            CityId = new Guid("53fe7244-6551-4818-85ba-d1c7902b8987"),
                            CountryISOCode = "NL",
                            Name = "Rotterdam",
                            Population = 651446
                        },
                        new
                        {
                            CityId = new Guid("95baa16b-e500-4aca-a6b6-20204edf1d95"),
                            CountryISOCode = "NL",
                            Name = "Amsterdam",
                            Population = 1149000
                        },
                        new
                        {
                            CityId = new Guid("7f17de0e-2f1c-4709-bf71-2550c620acb5"),
                            CountryISOCode = "DE",
                            Name = "Berlin",
                            Population = 3562000
                        },
                        new
                        {
                            CityId = new Guid("d59dc02c-09e1-467b-a327-8b45d462670a"),
                            CountryISOCode = "DE",
                            Name = "Frankfurt",
                            Population = 777000
                        },
                        new
                        {
                            CityId = new Guid("aae61697-de79-4971-840f-57984c552bab"),
                            CountryISOCode = "DE",
                            Name = "Hamburg",
                            Population = 1790000
                        },
                        new
                        {
                            CityId = new Guid("ebde4970-6c1d-4d21-a264-d0d946347daa"),
                            CountryISOCode = "DE",
                            Name = "Munich",
                            Population = 1558395
                        },
                        new
                        {
                            CityId = new Guid("2e892457-0a44-4073-805f-0c5cef4f350c"),
                            CountryISOCode = "DE",
                            Name = "Trier",
                            Population = 111528
                        });
                });

            modelBuilder.Entity("CountryApi.Models.Country", b =>
                {
                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("ISOCode");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ISOCode = "BE",
                            Name = "Belgium",
                            Population = 11629113
                        },
                        new
                        {
                            ISOCode = "LUX",
                            Name = "Luxembourg",
                            Population = 613894
                        },
                        new
                        {
                            ISOCode = "FR",
                            Name = "France",
                            Population = 65387226
                        },
                        new
                        {
                            ISOCode = "DE",
                            Name = "Germany",
                            Population = 83995211
                        },
                        new
                        {
                            ISOCode = "NL",
                            Name = "The Netherlands",
                            Population = 17164721
                        });
                });

            modelBuilder.Entity("CountryApi.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CountryApi.Models.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "ISOCode");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("CountryApi.Models.City", b =>
                {
                    b.HasOne("CountryApi.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryISOCode");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CountryApi.Models.UserCountry", b =>
                {
                    b.HasOne("CountryApi.Models.User", "User")
                        .WithMany("VisitedCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CountryApi.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CountryApi.Models.User", b =>
                {
                    b.Navigation("VisitedCountries");
                });
#pragma warning restore 612, 618
        }
    }
}
