// <auto-generated />
using System;
using CountryApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CountryApi.Migrations
{
    [DbContext(typeof(VisitContext))]
    [Migration("20210414133958_Added city seeding luxembourg 2")]
    partial class Addedcityseedingluxembourg2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CountryApi.Models.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryISOCode");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("72c4d020-bbca-43b6-bab7-7adfa0872d1d"),
                            CountryISOCode = "LUX",
                            Name = "Luxembourg City",
                            Population = 114303
                        },
                        new
                        {
                            CityId = new Guid("909c2ada-fb4f-474c-9a3b-da29f3181451"),
                            CountryISOCode = "LUX",
                            Name = "Echternach",
                            Population = 5614
                        },
                        new
                        {
                            CityId = new Guid("d36477f1-bf29-4ffc-8311-6bfda69f5713"),
                            CountryISOCode = "BE",
                            Name = "Bruges",
                            Population = 118656
                        },
                        new
                        {
                            CityId = new Guid("6358e80b-6b29-4c70-9f9c-4824a4c0e930"),
                            CountryISOCode = "BE",
                            Name = "Ghent",
                            Population = 466000
                        },
                        new
                        {
                            CityId = new Guid("59588509-0bf6-4ecf-8a6e-da654c18c195"),
                            CountryISOCode = "BE",
                            Name = "Antwerp",
                            Population = 523248
                        },
                        new
                        {
                            CityId = new Guid("5274a5d1-750f-425d-b4e8-ea729ef8d26b"),
                            CountryISOCode = "BE",
                            Name = "Brussels",
                            Population = 2081000
                        },
                        new
                        {
                            CityId = new Guid("2ed4f14b-b22b-41f0-bfb5-66f2ebb2fe51"),
                            CountryISOCode = "BE",
                            Name = "Liège",
                            Population = 195965
                        },
                        new
                        {
                            CityId = new Guid("ee085812-b199-4310-aa69-7023aac2974e"),
                            CountryISOCode = "BE",
                            Name = "Tournai",
                            Population = 69083
                        },
                        new
                        {
                            CityId = new Guid("76376c89-bc31-4969-b9fc-aa8748cf88e9"),
                            CountryISOCode = "FR",
                            Name = "Strasbourg",
                            Population = 272222
                        },
                        new
                        {
                            CityId = new Guid("6b319435-7dce-4570-b750-b4155fb7668c"),
                            CountryISOCode = "FR",
                            Name = "Paris",
                            Population = 11017000
                        },
                        new
                        {
                            CityId = new Guid("8c615d16-7f7c-4930-87a7-f7dd5a7147eb"),
                            CountryISOCode = "FR",
                            Name = "Calais",
                            Population = 72929
                        },
                        new
                        {
                            CityId = new Guid("ca2db91e-5faa-497a-842d-c1036100b446"),
                            CountryISOCode = "FR",
                            Name = "Calais",
                            Population = 868277
                        },
                        new
                        {
                            CityId = new Guid("72f0974f-eedc-412c-bfc2-d73533cfeb9f"),
                            CountryISOCode = "FR",
                            Name = "Bordeaux",
                            Population = 257068
                        },
                        new
                        {
                            CityId = new Guid("4eb101b3-368e-45bc-87bf-431e788f1a06"),
                            CountryISOCode = "NL",
                            Name = "Rotterdam",
                            Population = 651446
                        },
                        new
                        {
                            CityId = new Guid("0ff39296-d6f9-47f4-880f-a24d881bf6e0"),
                            CountryISOCode = "NL",
                            Name = "Amsterdam",
                            Population = 1149000
                        },
                        new
                        {
                            CityId = new Guid("5e770831-9666-4aac-9236-6f5dd3c9ac52"),
                            CountryISOCode = "DE",
                            Name = "Berlin",
                            Population = 3562000
                        },
                        new
                        {
                            CityId = new Guid("212a1825-3274-451b-912b-0820b621cb1b"),
                            CountryISOCode = "DE",
                            Name = "Frankfurt",
                            Population = 777000
                        },
                        new
                        {
                            CityId = new Guid("61bb07ff-b254-443f-a756-16fa4743756d"),
                            CountryISOCode = "DE",
                            Name = "Hamburg",
                            Population = 1790000
                        },
                        new
                        {
                            CityId = new Guid("b9ec61a4-ad94-4638-8f38-57880381fcfb"),
                            CountryISOCode = "DE",
                            Name = "Munich",
                            Population = 1558395
                        },
                        new
                        {
                            CityId = new Guid("5d6f107d-7eea-4d88-a276-a86b1d27f996"),
                            CountryISOCode = "DE",
                            Name = "Trier",
                            Population = 111528
                        });
                });

            modelBuilder.Entity("CountryApi.Models.Country", b =>
                {
                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("ISOCode");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ISOCode = "BE",
                            Name = "Belgium",
                            Population = 11629113
                        },
                        new
                        {
                            ISOCode = "LUX",
                            Name = "Luxembourg",
                            Population = 613894
                        },
                        new
                        {
                            ISOCode = "FR",
                            Name = "France",
                            Population = 65387226
                        },
                        new
                        {
                            ISOCode = "DE",
                            Name = "Germany",
                            Population = 83995211
                        },
                        new
                        {
                            ISOCode = "NL",
                            Name = "The Netherlands",
                            Population = 17164721
                        });
                });

            modelBuilder.Entity("CountryApi.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CountryApi.Models.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "ISOCode");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("CountryApi.Models.City", b =>
                {
                    b.HasOne("CountryApi.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryISOCode");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CountryApi.Models.UserCountry", b =>
                {
                    b.HasOne("CountryApi.Models.User", "User")
                        .WithMany("VisitedCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CountryApi.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CountryApi.Models.User", b =>
                {
                    b.Navigation("VisitedCountries");
                });
#pragma warning restore 612, 618
        }
    }
}
